#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift("#{__dir__}/../lib")

require 'ducalis'
require 'benchmark'

cli_arguments = Ducalis::CliArguments.new

if cli_arguments.help_command?
  puts 'You can start Ducalis in the next modes:'
  puts ' --branch   check files in RuboCop style against branch.'
  puts '  --index   check files in RuboCop style against index.'
  puts '    --all   [default] check all files in RuboCop style.'
  puts
  puts 'Use --reporter flag to pass how to report violations'
  puts '  Ex: ducalis --reporter "user/repo#42"'
  puts '      ducalis --reporter "circleci"'

  exit 0
end

if cli_arguments.docs_command?
  require 'ducalis/documentation'

  File.write(ARGV[1] || 'DOCUMENTATION.md', Documentation.new.call)

  exit 0
end

cli_arguments.process!

result = 0
cli = RuboCop::CLI.new
time = Benchmark.realtime do
  result = cli.run
end

puts "Finished in #{time} seconds" if cli.options[:debug]
puts "\033[32mBuild still green. Nothing to worry about\033[0m" if result == 1

exit 0
